// Test generated by RoostGPT for test golang-crud-api using AI Type Open AI and AI Model gpt-4-1106-preview


package allproducts_test

import (
	"testing"
	"allproducts"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/mock"
)

// MockRepository is a mock type for the Repository type
type MockRepository struct {
	mock.Mock
}

// The FindAll method mocks the Repository FindAll method
func (_m *MockRepository) FindAll() ([]allproducts.AllProduct, error) {
	rets := _m.Called()
	return rets.Get(0).([]allproducts.AllProduct), rets.Error(1)
}

func TestFindAll(t *testing.T) {
	mockRepo := new(MockRepository)
	service := allproducts.NewService(mockRepo)
	expectedProducts := []allproducts.AllProduct{
		{ID: 1, Name: "Product1", Price: 100},
		{ID: 2, Name: "Product2", Price: 200},
	}

	// Set expectation
	mockRepo.On("FindAll").Return(expectedProducts, nil)

	// Test FindAll
	products, err := service.FindAll()
	assert.NoError(t, err)
	assert.NotNil(t, products)
	assert.Equal(t, expectedProducts, products)

	// Assert that the expectations were met
	mockRepo.AssertExpectations(t)
}

func TestFindAllError(t *testing.T) {
	mockRepo := new(MockRepository)
	service := allproducts.NewService(mockRepo)

	// Set expectation
	mockRepo.On("FindAll").Return(nil, assert.AnError)

	// Test FindAll
	products, err := service.FindAll()
	assert.Error(t, err)
	assert.Nil(t, products)
	
	// Assert that the expectations were met
	mockRepo.AssertExpectations(t)
}

