// Test generated by RoostGPT for test golang-crud-api using AI Type Open AI and AI Model gpt-4-1106-preview

package allproducts_test

import (
	"errors"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/mock"

	"ecommerce/allproducts"
)

type MockRepository struct {
	mock.Mock
}

func (m *MockRepository) FindByID(ID int) (allproducts.AllProduct, error) {
	args := m.Called(ID)
	return args.Get(0).(allproducts.AllProduct), args.Error(1)
}

func TestFindByID_Positive(t *testing.T) {
	repo := new(MockRepository)
	service := allproducts.NewService(repo)
	product := allproducts.AllProduct{ID: 1, Name_product: "Test product", Price: 10}

	repo.On("FindByID", 1).Return(product, nil)

	result, err := service.FindByID(1)
	assert.Nil(t, err)
	assert.Equal(t, product, result)
}

func TestFindByID_Negative(t *testing.T) {
	repo := new(MockRepository)
	service := allproducts.NewService(repo)
	expectedError := errors.New("product not found")

	repo.On("FindByID", 2).Return(allproducts.AllProduct{}, expectedError)

	result, err := service.FindByID(2)
	assert.Equal(t, err, expectedError)
	assert.Equal(t, allproducts.AllProduct{}, result)
}

