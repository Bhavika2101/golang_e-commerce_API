// Test generated by RoostGPT for test golang-crud-api using AI Type Open AI and AI Model gpt-4-1106-preview

package book

import (
	"errors"
	"testing"

	"gorm.io/driver/sqlite"
	"gorm.io/gorm"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/mock"
)

type MockDB struct {
	mock.Mock
}

func (m *MockDB) Save(value interface{}) *gorm.DB {
	args := m.Called(value)
	return &gorm.DB{Error: args.Error(0)}
}

func TestUpdate(t *testing.T) {
	db, _ := gorm.Open(sqlite.Open("file::memory:?cache=shared"), &gorm.Config{})
	mockDB := new(MockDB)
	repo := NewRepository(db)
	testBook := Book{ID: 1, Title: "Test Book", Author: "Test Author", Description: "Test Description"}
	db.Create(&testBook)

	t.Run("positive case", func(t *testing.T) {
		mockDB.On("Save", &testBook).Return(nil)
		updatedBook, err := repo.Update(testBook)
		assert.Nil(t, err)
		assert.Equal(t, testBook, updatedBook)
		mockDB.AssertExpectations(t)
	})

	t.Run("negative case", func(t *testing.T) {
		expectedError := gorm.ErrInvalidTransaction
		mockDB.On("Save", &testBook).Return(expectedError)
		_, err := repo.Update(testBook)
		assert.NotNil(t, err)
		assert.EqualError(t, err, expectedError.Error())
		mockDB.AssertExpectations(t)
	})
}

