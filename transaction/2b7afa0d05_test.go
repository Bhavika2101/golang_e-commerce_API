// Test generated by RoostGPT for test golang-crud-api using AI Type Open AI and AI Model gpt-4-1106-preview


package transaction_test

import (
	"errors"
	"testing"
	
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/mock"
	"gorm.io/gorm"

	"transaction"
)

// Mocking the database and the Repository interface
type MockRepository struct {
	mock.Mock
}

func (mock *MockRepository) Delete(transaction transaction.Transaction) (transaction.Transaction, error) {
	args := mock.Called(transaction)
	return args.Get(0).(transaction.Transaction), args.Error(1)
}

func TestDelete_Positive(t *testing.T) {
	db := new(MockRepository)
	trans := transaction.Transaction{Model: gorm.Model{ID: 1}}
	db.On("Delete", trans).Return(trans, nil)

	repo := transaction.NewRepository(db)
	result, err := repo.Delete(trans)

	assert.Nil(t, err)
	assert.Equal(t, trans, result)
	db.AssertExpectations(t)
}

func TestDelete_Negative(t *testing.T) {
	db := new(MockRepository)
	trans := transaction.Transaction{Model: gorm.Model{ID: 99}}
	errMsg := "transaction not found"
	db.On("Delete", trans).Return(transaction.Transaction{}, errors.New(errMsg))

	repo := transaction.NewRepository(db)
	result, err := repo.Delete(trans)

	assert.NotNil(t, err)
	assert.EqualError(t, err, errMsg)
	assert.NotEqual(t, trans, result)
	db.AssertExpectations(t)
}

