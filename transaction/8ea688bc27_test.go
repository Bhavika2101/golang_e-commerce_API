// Test generated by RoostGPT for test golang-crud-api using AI Type Open AI and AI Model gpt-4-1106-preview


package transaction_test

import (
    "github.com/stretchr/testify/assert"
    "gorm.io/driver/sqlite"
    "gorm.io/gorm"
    "testing"
    "transaction"
)

func TestNewRepository(t *testing.T) {
    // Positive case: should create a new instance of repository
    db, err := gorm.Open(sqlite.Open("file::memory:?cache=shared"), &gorm.Config{})
    if err != nil {
        t.Fatalf("Failed to connect to database: %v", err)
    }
    repo := transaction.NewRepository(db)
    assert.NotNil(t, repo, "NewRepository should return a not-nil instance of repository")

    // Negative case: should not create a new instance of repository when db is nil
    repo = transaction.NewRepository(nil)
    assert.Nil(t, repo, "NewRepository should return nil when the db is nil")
}

