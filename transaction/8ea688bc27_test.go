// Test generated by RoostGPT for test golang-crud-api using AI Type Open AI and AI Model gpt-4-1106-preview

package transaction_test

import (
	"golang_e-commerce_API/transaction"
	"gorm.io/driver/sqlite"
	"gorm.io/gorm"
	"testing"
)

func TestNewRepository(t *testing.T) {
	// Positive case: Testing if NewRepository returns a non-nil repository
	t.Run("returnsNewRepository", func(t *testing.T) {
		db, err := gorm.Open(sqlite.Open("test.db"), &gorm.Config{})
		if err != nil {
			t.Fatalf("could not open database connection for tests: %v", err)
		}
		repo := transaction.NewRepository(db)
		if repo == nil {
			t.Error("expected NewRepository to return non-nil repository")
		}
	})

	// Negative case: Testing if NewRepository returns a nil when passing nil db
	t.Run("returnsNilForNilDB", func(t *testing.T) {
		repo := transaction.NewRepository(nil)
		if repo != nil {
			t.Error("expected NewRepository to return nil for nil db input")
		}
	})
}

